{"version":3,"sources":["api/api.js","components/Header/Login/validate.js","components/Header/Login/Field.jsx","components/HOC/withUser.jsx","components/Header/Login/LoginForm.jsx","components/HOC/withAuth.jsx","components/Header/Login/Login.jsx","components/Header/UserMenu.jsx","components/Header/Header.jsx","components/Filters/SortBy.jsx","components/Filters/ReleaseYear.jsx","components/Filters/Genres/Genres.jsx","components/Filters/Genres/GenresHOC.jsx","components/Filters/Pagination.jsx","components/Filters/Filters.jsx","components/Movies/Favorite.jsx","components/Movies/WillWatch.jsx","components/UIComponents/Image.jsx","components/Movies/MovieItem.jsx","components/Movies/MoviesList.jsx","components/Movies/MoviesHOC.jsx","components/pages/MoviesPage/MoviesPage.jsx","components/pages/MoviePage/MoviePageTabs/NavTabs.jsx","components/pages/MoviePage/MoviePageTabs/MovieDetail.jsx","components/UIComponents/Loader.jsx","components/pages/MoviePage/MoviePageTabs/MovieVideos.jsx","components/pages/MoviePage/MoviePageTabs/MovieActors.jsx","components/pages/MoviePage/MoviePageTabs/MoviePageTabs.jsx","components/pages/MoviePage/MovieOverview.jsx","components/pages/MoviePage/MoviePage.jsx","components/App.jsx","actions/actions.js","reducers/reducerAuth.js","reducers/reducerMovies.js","reducers/combineReducers.js","store/store.js","index.js"],"names":["API_URL","API_KEY_3","fetchApi","url","options","Promise","resolve","reject","fetch","then","response","status","json","data","catch","error","CallApi","params","queryStringParams","api_key","queryString","stringify","mode","headers","body","method","JSON","validateFields","values","errors","username","password","repeatPassword","Field","this","props","id","labelText","type","placeholder","name","value","onChange","handleBlur","className","htmlFor","classNames","invalid","onBlur","React","Component","UserContext","Consumer","context","withUser","e","target","setState","prevState","base","event","state","Object","keys","length","onSubmit","updateAuth","getFavoriteList","getWatchList","getUser","session_id","submitting","get","post","request_token","user","status_message","onLogin","preventDefault","onClick","disabled","AuthContext","withAuth","showLoginModal","toggleLoginModal","Modal","isOpen","toggle","ModalBody","toggleDropdown","dropdownOpen","handleLogOut","Dropdown","DropdownToggle","tag","data-toggle","aria-expanded","width","src","avatar","gravatar","hash","alt","DropdownMenu","right","DropdownItem","to","SortBy","sort_by","onChangeFilter","map","option","key","label","PureComponent","defaultProps","years","i","push","getYear","ReleaseYear","primary_release_year","item","Genres","genres","with_genres","onChangeGenres","genre","checked","includes","String","GenresHOC","check","filter","Number","language","Pagination","onChangePagination","page","total_pages","bind","Filters","filters","pagination","onReset","markAsFavorite","movieId","favorite_movies","isLoading","media_type","media_id","favorite","getCurrentFavorite","some","isFavorite","style","pointerEvents","Star","StarBorder","addToWatchList","watchlist","getCurrentWatchList","isWillWatch","Bookmark","BookmarkBorder","Image","path","rest","MovieItem","backdrop_path","poster_path","title","vote_average","MoviesList","movies","movie","MoviesHOC","getMovies","results","prevProps","_","isEqual","MoviesPage","initialState","tabs","link","withRouter","match","index","MovieDetail","movieDetails","movieDataList","release_date","runtime","original_language","production_countries","budget","revenue","production_companies","Table","scope","Loader","Spinner","color","MovieVideos","movieVideos","height","frameBorder","allowFullScreen","MovieActors","movieActors","cast","profile_path","MoviePageTabs","component","MovieOverview","overview","Fragment","MoviePage","createContext","App","delete","onLogOut","updateFavoriteList","updateWatchList","basename","Provider","exact","connect","auth","dispatch","payload","cookies","Cookies","reducerAuth","action","set","maxAge","remove","reducerMovies","reducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.105d3f56.chunk.js","sourcesContent":["import queryString from \"query-string\";\n\nexport const API_URL = \"https://api.themoviedb.org/3\";\n\nexport const API_KEY_3 = \"4237669ebd35e8010beee2f55fd45546\";\n\nexport const API_KEY_4 =\n  \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0MjM3NjY5ZWJkMzVlODAxMGJlZWUyZjU1ZmQ0NTU0NiIsInN1YiI6IjVkMzc0NjVkZTU0ZDVkMjBhNGRiZDRlNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.QkywZtcqMOTYX-fvvag8B-1DVXxaFEgVDumJkqV6oE0\";\n\nexport const fetchApi = (url, options = {}) => {\n  return new Promise((resolve, reject) => {\n    fetch(url, options)\n      .then(response => {\n        if (response.status < 400) {\n          return response.json();\n        } else {\n          throw response;\n        }\n      })\n      .then(data => {\n        resolve(data);\n      })\n      .catch(response => {\n        response.json().then(error => {\n          reject(error);\n        });\n      });\n  });\n};\n\nexport default class CallApi {\n  static get(url, options = {}) {\n    const { params = {} } = options;\n    const queryStringParams = {\n      api_key: API_KEY_3,\n      ...params\n    };\n    return fetchApi(\n      `${API_URL}${url}?${queryString.stringify(queryStringParams)}`,\n      {\n        mode: \"cors\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      }\n    );\n  }\n\n  static post(url, options = {}) {\n    const { params = {}, body = {} } = options;\n    const queryStringParams = {\n      api_key: API_KEY_3,\n      ...params\n    };\n    return fetchApi(\n      `${API_URL}${url}?${queryString.stringify(queryStringParams)}`,\n      {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      }\n    );\n  }\n\n  static delete(url, options = {}) {\n    const { params = {}, body = {} } = options;\n    const queryStringParams = {\n      api_key: API_KEY_3,\n      ...params\n    };\n    return fetchApi(\n      `${API_URL}${url}?${queryString.stringify(queryStringParams)}`,\n      {\n        method: \"DELETE\",\n        mode: \"cors\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      }\n    );\n  }\n}\n","const validateFields = values => {\n  const errors = {};\n\n  if (values.username === \"\") {\n    errors.username = \"Not empty\";\n  }\n  if (values.password === \"\") {\n    errors.password = \"Required\";\n  }\n  if (values.repeatPassword !== values.password) {\n    errors.repeatPassword = \"Must be equal password\";\n  }\n  return errors;\n};\n\nexport default validateFields;\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nexport default class Field extends React.Component {\n  render() {\n    const {\n      id,\n      labelText,\n      type,\n      placeholder,\n      name,\n      value,\n      onChange,\n      handleBlur,\n      error\n    } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label htmlFor={id}>{labelText}</label>\n        <input\n          type={type}\n          className={classNames(\"form-control\", {\n            invalid: error\n          })}\n          id={id}\n          placeholder={placeholder}\n          name={name}\n          value={value}\n          onChange={onChange}\n          onBlur={handleBlur}\n        />\n        {error && <div className=\"invalid-feedback\">{error}</div>}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { UserContext } from \"../App\";\n\nexport default Component =>\n  class withUser extends React.Component {\n    render() {\n      return (\n        <UserContext.Consumer>\n          {context => <Component {...this.props} {...context} />}\n        </UserContext.Consumer>\n      );\n    }\n  };\n","import React from \"react\";\nimport CallApi from \"../../../api/api\";\nimport validateFields from \"./validate\";\nimport Field from \"./Field\";\nimport withUser from \"../../HOC/withUser\";\n\nclass LoginForm extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      values: {\n        username: \"belka\",\n        password: \"zxcvbn\",\n        repeatPassword: \"zxcvbn\"\n      },\n      errors: {},\n      submitting: false\n    };\n  }\n\n  onChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState(prevState => ({\n      values: {\n        ...prevState.values,\n        [name]: value\n      },\n      errors: {\n        ...prevState.errors,\n        base: null,\n        [name]: null\n      }\n    }));\n  };\n\n  handleBlur = event => {\n    const name = event.target.name;\n    const errors = validateFields(this.state.values);\n    if (Object.keys(errors).length > 0) {\n      this.setState(prevState => ({\n        errors: {\n          ...prevState.errors,\n          [name]: errors[name]\n        }\n      }));\n    }\n  };\n\n  onSubmit = () => {\n    const {\n      values: { username, password }\n    } = this.state;\n    const { updateAuth, getFavoriteList, getWatchList, getUser } = this.props;\n    let session_id = null;\n    this.setState({\n      submitting: true\n    });\n    CallApi.get(\"/authentication/token/new\")\n      .then(data => {\n        return CallApi.post(\"/authentication/token/validate_with_login\", {\n          body: {\n            username,\n            password,\n            request_token: data.request_token\n          }\n        });\n      })\n      .then(data => {\n        return CallApi.post(\"/authentication/session/new\", {\n          body: {\n            request_token: data.request_token\n          }\n        });\n      })\n      .then(data => {\n        session_id = data.session_id;\n        return getUser(session_id);\n      })\n      .then(user => {\n        this.setState(\n          {\n            submitting: false\n          },\n          () => {\n            updateAuth(user, session_id);\n          }\n        );\n      })\n      .then(() => {\n        getFavoriteList();\n      })\n      .then(() => {\n        getWatchList();\n      })\n      .catch(error => {\n        this.setState({\n          submitting: false,\n          errors: {\n            base: error.status_message\n          }\n        });\n      });\n  };\n\n  onLogin = e => {\n    e.preventDefault();\n    const errors = validateFields(this.state.values);\n    if (Object.keys(errors).length > 0) {\n      this.setState(prevState => ({\n        errors: {\n          ...prevState.errors,\n          ...errors\n        }\n      }));\n    } else {\n      this.onSubmit();\n    }\n  };\n\n  render() {\n    const {\n      values: { username, password, repeatPassword },\n      errors,\n      submitting\n    } = this.state;\n    return (\n      <div className=\"form-login-container\">\n        <form className=\"form-login\">\n          <h1 className=\"h3 mb-3 font-weight-normal text-center\">\n            Авторизация\n          </h1>\n          <Field\n            id=\"username\"\n            labelText=\"Пользователь\"\n            type=\"text\"\n            placeholder=\"Пользователь\"\n            name=\"username\"\n            value={username}\n            onChange={this.onChange}\n            handleBlur={this.handleBlur}\n            error={errors.username}\n          />\n          <Field\n            id=\"password\"\n            labelText=\"Пароль\"\n            type=\"password\"\n            placeholder=\"Пароль\"\n            name=\"password\"\n            value={password}\n            onChange={this.onChange}\n            handleBlur={this.handleBlur}\n            error={errors.password}\n          />\n          <Field\n            id=\"repeatPassword\"\n            labelText=\"Повторите пароль\"\n            type=\"password\"\n            placeholder=\"Повторите пароль\"\n            name=\"repeatPassword\"\n            value={repeatPassword}\n            onChange={this.onChange}\n            handleBlur={this.handleBlur}\n            error={errors.repeatPassword}\n          />\n          <button\n            type=\"submit\"\n            className=\"btn btn-lg btn-primary btn-block\"\n            onClick={this.onLogin}\n            disabled={submitting}\n          >\n            Вход\n          </button>\n          {errors.base && (\n            <div className=\"invalid-feedback text-center\">{errors.base}</div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withUser(LoginForm);\n","import React from \"react\";\nimport { AuthContext } from \"../App\";\n\nexport default Component =>\n  class withAuth extends React.Component {\n    render() {\n      return (\n        <AuthContext.Consumer>\n          {context => <Component {...this.props} {...context} />}\n        </AuthContext.Consumer>\n      );\n    }\n  };\n","import React from \"react\";\nimport { Modal, ModalBody } from \"reactstrap\";\nimport LoginForm from \"./LoginForm\";\nimport withAuth from \"../../HOC/withAuth\";\n\nclass Login extends React.Component {\n  render() {\n    const { showLoginModal, toggleLoginModal } = this.props;\n    return (\n      <div>\n        <button\n          className=\"btn btn-success\"\n          type=\"button\"\n          onClick={toggleLoginModal}\n        >\n          Login\n        </button>\n        <Modal isOpen={showLoginModal} toggle={toggleLoginModal}>\n          <ModalBody>\n            <LoginForm />\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(Login);\n\n//async/await\n// try {\n//   const data = await fetchApi(\n//     `${API_URL}/authentication/token/new?api_key=${API_KEY_3}`\n//   );\n//   const result = await fetchApi(\n//     `${API_URL}/authentication/token/validate_with_login?api_key=${API_KEY_3}`,\n//     {\n//       method: \"POST\",\n//       mode: \"cors\",\n//       headers: {\n//         \"Content-type\": \"application/json\"\n//       },\n//       body: JSON.stringify({\n//         username: \"belka\",\n//         password: \"zxcvbn\",\n//         request_token: data.request_token\n//       })\n//     }\n//   );\n//   const { session_id } = await fetchApi(\n//     `${API_URL}/authentication/session/new?api_key=${API_KEY_3}`,\n//     {\n//       method: \"POST\",\n//       mode: \"cors\",\n//       headers: {\n//         \"Content-type\": \"application/json\"\n//       },\n//       body: JSON.stringify({\n//         request_token: result.request_token\n//       })\n//     }\n//   );\n//   console.log(session_id);\n// } catch (error) {\n//   console.log(\"error\", error);\n// }\n\n// const getRequestToken = () => {\n//   return new Promise((resolve, reject) => {\n//     fetch(`${API_URL}/authentication/token/new?api_key=${API_KEY_3}`)\n//       .then(response => {\n//         if (response.status < 400) {\n//           return response.json();\n//         } else {\n//           throw response;\n//         }\n//       })\n//       .then(data => {\n//         resolve(data);\n//       })\n//       .catch(response => {\n//         response.json().then(error => {\n//           reject(error);\n//         });\n//       });\n//   });\n// };\n\n// const validateWithLogin = body => {\n//   return new Promise((resolve, reject) => {\n//     fetch(\n//       `${API_URL}/authentication/token/validate_with_login?api_key=${API_KEY_3}`,\n//       {\n//         method: \"POST\",\n//         mode: \"cors\",\n//         headers: {\n//           \"Content-type\": \"application/json\"\n//         },\n//         body: JSON.stringify(body)\n//       }\n//     )\n//       .then(response => {\n//         if (response.status < 400) {\n//           return response.json();\n//         } else {\n//           throw response;\n//         }\n//       })\n//       .then(data => {\n//         resolve(data);\n//       })\n//       .catch(response => {\n//         response.json().then(error => {\n//           reject(error);\n//         });\n//       });\n//   });\n// };\n\n// fetch(`${API_URL}/authentication/token/new?api_key=${API_KEY_3}`)\n//   .then(response => response.json())\n//   .then(data => {\n//     fetch(\n//       `${API_URL}/authentication/token/validate_with_login?api_key=${API_KEY_3}`,\n//       {\n//         method: \"POST\",\n//         mode: \"cors\",\n//         headers: {\n//           \"Content-type\": \"application/json\"\n//         },\n//         body: JSON.stringify({\n//           username: \"belka\",\n//           password: \"zxcvbn\",\n//           request_token: data.request_token\n//         })\n//       }\n//     )\n//       .then(response => response.json())\n//       .then(data => {\n//         fetch(\n//           `${API_URL}/authentication/session/new?api_key=${API_KEY_3}`,\n//           {\n//             method: \"POST\",\n//             mode: \"cors\",\n//             headers: {\n//               \"Content-type\": \"application/json\"\n//             },\n//             body: JSON.stringify({\n//               request_token: data.request_token\n//             })\n//           }\n//         )\n//           .then(response => response.json())\n//           .then(data => {\n//             console.log(\"session\", data);\n//           });\n//       });\n//   });\n","import React from \"react\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\nimport withUser from \"../HOC/withUser\";\nimport withAuth from \"../HOC/withAuth\";\n\nclass UserMenu extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      dropdownOpen: false\n    };\n  }\n\n  toggleDropdown = () => {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  };\n\n  render() {\n    const { dropdownOpen } = this.state;\n    const { user, handleLogOut } = this.props;\n    return (\n      <Dropdown isOpen={dropdownOpen} toggle={this.toggleDropdown}>\n        <DropdownToggle\n          tag=\"div\"\n          onClick={this.toggleDropdown}\n          data-toggle=\"dropdown\"\n          aria-expanded={dropdownOpen}\n        >\n          <img\n            width=\"40\"\n            className=\"rounded-circle\"\n            src={`https://secure.gravatar.com/avatar/${user.avatar.gravatar.hash}.jpg?s=64\"`}\n            alt=\"\"\n            onClick={this.toggleDropdown}\n          />\n        </DropdownToggle>\n        <DropdownMenu right>\n          <DropdownItem onClick={handleLogOut}>Выйти</DropdownItem>\n        </DropdownMenu>\n      </Dropdown>\n    );\n  }\n}\n\nexport default withUser(withAuth(UserMenu));\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Login from \"./Login/Login\";\nimport UserMenu from \"./UserMenu\";\nimport withUser from \"../HOC/withUser\";\n\nclass Header extends React.Component {\n  render() {\n    const { user } = this.props;\n    return (\n      <nav className=\"navbar navbar-dark bg-primary\">\n        <div className=\"container\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item active\">\n              <Link to=\"/\" className=\"nav-link\">\n                Home\n              </Link>\n            </li>\n          </ul>\n          {user ? <UserMenu /> : <Login />}\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default withUser(Header);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class SortBy extends React.PureComponent {\n  static propTypes = {\n    sort_by: PropTypes.string.isRequired,\n    onChangeFilter: PropTypes.func.isRequired\n  };\n  static defaultProps = {\n    options: [\n      {\n        label: \"Популярные по убыванию\",\n        value: \"popularity.desc\"\n      },\n      {\n        label: \"Популярные по возростанию\",\n        value: \"popularity.asc\"\n      },\n      {\n        label: \"Рейтинг по убыванию\",\n        value: \"vote_average.desc\"\n      },\n      {\n        label: \"Рейтинг по возростанию\",\n        value: \"vote_average.asc\"\n      }\n    ]\n  };\n  render() {\n    const { sort_by, onChangeFilter, options } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label htmlFor=\"sort_by\">Сортировать по:</label>\n        <select\n          className=\"form-control\"\n          id=\"sort_by\"\n          name=\"sort_by\"\n          value={sort_by}\n          onChange={onChangeFilter}\n        >\n          {options.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </select>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst getYear = () => {\n  const options = [];\n  for (let i = 2019; i >= 2000; i--) {\n    options.push(i);\n  }\n  return options;\n};\nconst years = getYear();\n\nexport default class ReleaseYear extends React.PureComponent {\n  static propTypes = {\n    primary_release_year: PropTypes.string.isRequired,\n    onChangeFilter: PropTypes.func.isRequired\n  };\n\n  render() {\n    const { onChangeFilter, primary_release_year } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label htmlFor=\"primary_release_year\">Год релиза:</label>\n        <select\n          className=\"form-control\"\n          id=\"primary_release_year\"\n          name=\"primary_release_year\"\n          value={primary_release_year}\n          onChange={onChangeFilter}\n        >\n          <option>Выберите год</option>\n          {years.map(item => (\n            <option value={item} key={item}>\n              {item}\n            </option>\n          ))}\n        </select>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GenresHOC from \"./GenresHOC\";\n\nconst Genres = ({ genres, with_genres, onChangeGenres }) => (\n  <div>\n    <div>Выберите жанр:</div>\n    {genres.map(genre => (\n      <div className=\"form-check\" key={genre.id}>\n        <input\n          className=\"form-check-input\"\n          type=\"checkbox\"\n          id={`genre-${genre.id}`}\n          name=\"with_genres\"\n          checked={with_genres.includes(String(genre.id))}\n          value={genre.id}\n          onChange={onChangeGenres}\n        />\n        <label className=\"form-check-label\" htmlFor={`genre-${genre.id}`}>\n          {genre.name}\n        </label>\n      </div>\n    ))}\n  </div>\n);\n\nGenres.defaultProps = {\n  genres: [],\n  with_genres: []\n};\n\nGenres.propTypes = {\n  genres: PropTypes.array.isRequired,\n  with_genres: PropTypes.array.isRequired,\n  onChangeGenres: PropTypes.func.isRequired\n};\nexport default GenresHOC(Genres);\n","import React from \"react\";\nimport CallApi from \"../../../api/api\";\nimport PropTypes from \"prop-types\";\n\nexport default Component =>\n  class GenresHOC extends React.PureComponent {\n    constructor() {\n      super();\n\n      this.state = {\n        genres: []\n      };\n    }\n    static propTypes = {\n      with_genres: PropTypes.array.isRequired,\n      onChangeFilter: PropTypes.func.isRequired\n    };\n\n    componentDidMount() {\n      CallApi.get(\"/genre/movie/list\", {\n        params: {\n          language: \"ru-RU\"\n        }\n      }).then(data => {\n        this.setState({\n          genres: data.genres\n        });\n      });\n    }\n\n    onChangeGenres = event => {\n      const { with_genres } = this.props;\n      const check = event.target.checked;\n      const value = event.target.value;\n      this.props.onChangeFilter({\n        target: {\n          name: \"with_genres\",\n          value: check\n            ? [...with_genres, value]\n            : with_genres.filter(genre => Number(genre) !== Number(value))\n        }\n      });\n    };\n\n    render() {\n      const { genres } = this.state;\n      const { with_genres } = this.props;\n      return (\n        <Component\n          genres={genres}\n          with_genres={with_genres}\n          onChangeGenres={this.onChangeGenres}\n        />\n      );\n    }\n  };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class Pagination extends React.PureComponent {\n  static propTypes = {\n    page: PropTypes.number.isRequired,\n    total_pages: PropTypes.number.isRequired,\n    onChangePagination: PropTypes.func.isRequired\n  };\n\n  render() {\n    const { onChangePagination, page, total_pages } = this.props;\n    return (\n      <div>\n        <div className=\"btn-group\">\n          <button\n            type=\"button\"\n            className=\"btn btn-light mr-2\"\n            disabled={page === 1}\n            onClick={onChangePagination.bind(null, page - 1, total_pages)}\n          >\n            Назад\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-light\"\n            onClick={onChangePagination.bind(null, page + 1, total_pages)}\n          >\n            Вперед\n          </button>\n        </div>\n        <div>\n          {page} of {total_pages}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport SortBy from \"./SortBy\";\nimport ReleaseYear from \"./ReleaseYear\";\nimport Genres from \"./Genres/Genres\";\nimport Pagination from \"./Pagination\";\n\nexport default class Filters extends React.Component {\n  render() {\n    const {\n      filters: { sort_by, primary_release_year, with_genres },\n      pagination: { page, total_pages },\n      onChangeFilter,\n      onChangePagination,\n      onReset\n    } = this.props;\n    return (\n      <form className=\"mb-3\">\n        <div>\n          <button type=\"button\" className=\"btn btn-light\" onClick={onReset}>\n            Очистить фильтры\n          </button>\n        </div>\n        <SortBy onChangeFilter={onChangeFilter} sort_by={sort_by} />\n        <ReleaseYear\n          onChangeFilter={onChangeFilter}\n          primary_release_year={primary_release_year}\n        />\n        <Genres onChangeFilter={onChangeFilter} with_genres={with_genres} />\n        <Pagination\n          onChangePagination={onChangePagination}\n          page={page}\n          total_pages={total_pages}\n        />\n      </form>\n    );\n  }\n}\n","import React from \"react\";\nimport CallApi from \"../../api/api\";\nimport { Star, StarBorder } from \"@material-ui/icons\";\nimport withUser from \"../HOC/withUser\";\nimport withAuth from \"../HOC/withAuth\";\n\nclass Favorite extends React.PureComponent {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: false\n    };\n  }\n\n  markAsFavorite = () => {\n    const {\n      user,\n      session_id,\n      movieId,\n      favorite_movies,\n      getFavoriteList,\n      toggleLoginModal\n    } = this.props;\n    if (session_id) {\n      this.setState(\n        {\n          isLoading: true\n        },\n        () => {\n          CallApi.post(`/account/${user.id}/favorite`, {\n            params: {\n              session_id\n            },\n            body: {\n              media_type: \"movie\",\n              media_id: movieId,\n              favorite: !this.getCurrentFavorite(favorite_movies, movieId)\n            }\n          }).then(() => {\n            getFavoriteList().then(() => {\n              this.setState({\n                isLoading: false\n              });\n            });\n          });\n        }\n      );\n    } else {\n      toggleLoginModal();\n    }\n  };\n\n  getCurrentFavorite = (favorite_movies, movieId) =>\n    favorite_movies.some(item => item.id === movieId);\n\n  render() {\n    const { isLoading } = this.state;\n    const { favorite_movies, movieId } = this.props;\n    const isFavorite = this.getCurrentFavorite(favorite_movies, movieId);\n    //console.log(isFavorite);\n    return (\n      <div\n        className=\"d-inline-flex\"\n        onClick={this.markAsFavorite}\n        style={{ pointerEvents: isLoading ? \"none\" : \"auto\" }}\n      >\n        {isFavorite ? <Star /> : <StarBorder />}\n      </div>\n    );\n  }\n}\n\nexport default withUser(withAuth(Favorite));\n\n// componentDidMount() {\n//   this.props.favorite_movies.map(item => {\n//     if (item.id === this.props.itemId) {\n//       return this.setState({\n//         isFavorite: true\n//       });\n//     } else {\n//       return false;\n//     }\n//   });\n// }\n\n// componentDidUpdate(prevProps) {\n//   if (!_.isEqual(this.props.favorite_movies, prevProps.favorite_movies)) {\n//     this.props.favorite_movies.map(item => {\n//       if (item.id === this.props.itemId) {\n//         return this.setState({\n//           isFavorite: true\n//         });\n//       } else {\n//         return false;\n//       }\n//     });\n//   }\n// }\n","import React from \"react\";\nimport CallApi from \"../../api/api\";\nimport { Bookmark, BookmarkBorder } from \"@material-ui/icons\";\nimport withUser from \"../HOC/withUser\";\nimport withAuth from \"../HOC/withAuth\";\n\nclass WillWatch extends React.PureComponent {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: false\n    };\n  }\n\n  addToWatchList = () => {\n    const {\n      user,\n      session_id,\n      movieId,\n      watchlist,\n      getWatchList,\n      toggleLoginModal\n    } = this.props;\n    if (session_id) {\n      this.setState(\n        {\n          isLoading: true\n        },\n        () => {\n          CallApi.post(`/account/${user.id}/watchlist`, {\n            params: {\n              session_id\n            },\n            body: {\n              media_type: \"movie\",\n              media_id: movieId,\n              watchlist: !this.getCurrentWatchList(watchlist, movieId)\n            }\n          }).then(() => {\n            getWatchList().then(() => {\n              this.setState({\n                isLoading: false\n              });\n            });\n          });\n        }\n      );\n    } else {\n      toggleLoginModal();\n    }\n  };\n\n  getCurrentWatchList = (watchlist, movieId) =>\n    watchlist.some(item => item.id === movieId);\n\n  render() {\n    const { isLoading } = this.state;\n    const { watchlist, movieId } = this.props;\n    const isWillWatch = this.getCurrentWatchList(watchlist, movieId);\n    //console.log(isWillWatch);\n    return (\n      <div\n        className=\"d-inline-flex\"\n        onClick={this.addToWatchList}\n        style={{ pointerEvents: isLoading ? \"none\" : \"auto\" }}\n      >\n        {isWillWatch ? <Bookmark /> : <BookmarkBorder />}\n      </div>\n    );\n  }\n}\nexport default withUser(withAuth(WillWatch));\n\n// componentDidMount() {\n//   this.props.watchlist.map(item => {\n//     if (item.id === this.props.itemId) {\n//       return this.setState({\n//         isWillWatch: true\n//       });\n//     } else {\n//       return false;\n//     }\n//   });\n// }\n\n// componentDidUpdate(prevProps) {\n//   if (!_.isEqual(this.props.watchlist, prevProps.watchlist)) {\n//     this.props.watchlist.map(item => {\n//       if (item.id === this.props.itemId) {\n//         return this.setState({\n//           isWillWatch: true\n//         });\n//       } else {\n//         return false;\n//       }\n//     });\n//   }\n// }\n","import React from \"react\";\n//import PropTypes from \"prop-types\";\n\nconst Image = ({ path, ...rest }) => (\n  <img src={`https://image.tmdb.org/t/p/w500${path}`} {...rest} alt=\"\" />\n);\n\n// Image.propTypes = {\n//   path: PropTypes.string.isRequired\n// };\n\nexport default Image;\n","import React from \"react\";\nimport Favorite from \"./Favorite\";\nimport WillWatch from \"./WillWatch\";\nimport { Link } from \"react-router-dom\";\nimport Image from \"../UIComponents/Image\";\n\nclass MovieItem extends React.PureComponent {\n  render() {\n    const { item } = this.props;\n    return (\n      <div className=\"card\" style={{ width: \"100%\" }}>\n        <Image\n          className=\"card-img-top card-img--height\"\n          alt=\"\"\n          path={item.backdrop_path || item.poster_path}\n        />\n        <div className=\"card-body\">\n          <Link className=\"card-title\" to={`/movie/${item.id}/details`}>\n            {item.title}\n          </Link>\n          <div className=\"card-text\">Рейтинг: {item.vote_average}</div>\n          <Favorite movieId={item.id} />\n          <WillWatch movieId={item.id} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MovieItem;\n","import React from \"react\";\nimport MovieItem from \"./MovieItem\";\nimport PropTypes from \"prop-types\";\nimport MoviesHOC from \"./MoviesHOC\";\n\nconst MoviesList = ({ movies }) => (\n  <div className=\"row\">\n    {movies.map(movie => {\n      return (\n        <div key={movie.id} className=\"col-6 mb-4\">\n          <MovieItem item={movie} />\n        </div>\n      );\n    })}\n  </div>\n);\n\nMoviesList.defaultProps = {\n  movies: []\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired\n};\n\nexport default MoviesHOC(MoviesList);\n","import React from \"react\";\nimport CallApi from \"../../api/api\";\nimport _ from \"lodash\";\n\nexport default Component =>\n  class MoviesHOC extends React.Component {\n    constructor() {\n      super();\n\n      this.state = {\n        movies: []\n      };\n    }\n\n    getMovies = (filters, page) => {\n      const { sort_by, primary_release_year, with_genres } = filters;\n      const queryStringParams = {\n        language: \"ru-RU\",\n        sort_by: sort_by,\n        page: page,\n        primary_release_year: primary_release_year,\n        with_genres: with_genres\n      };\n      CallApi.get(\"/discover/movie\", {\n        params: queryStringParams\n      }).then(data => {\n        this.props.onChangePagination(page, data.total_pages);\n        this.setState({\n          movies: data.results\n        });\n      });\n    };\n\n    componentDidMount() {\n      this.getMovies(this.props.filters, this.props.pagination.page);\n    }\n\n    componentDidUpdate(prevProps) {\n      if (!_.isEqual(this.props.filters, prevProps.filters)) {\n        this.getMovies(this.props.filters, 1);\n      }\n      if (!_.isEqual(this.props.pagination, prevProps.pagination)) {\n        this.getMovies(this.props.filters, this.props.pagination.page);\n      }\n    }\n\n    render() {\n      const { movies } = this.state;\n      return <Component movies={movies} />;\n    }\n  };\n","import React from \"react\";\nimport Filters from \"../../Filters/Filters\";\nimport MoviesList from \"../../Movies/MoviesList\";\n\nexport default class MoviesPage extends React.Component {\n  constructor() {\n    super();\n\n    this.initialState = {\n      filters: {\n        sort_by: \"vote_average.desc\",\n        primary_release_year: \"\",\n        with_genres: []\n      },\n      pagination: {\n        page: 1,\n        total_pages: 1\n      }\n    };\n    this.state = { ...this.initialState };\n  }\n\n  onChangeFilter = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState(prevState => ({\n      filters: {\n        ...prevState.filters,\n        [name]: value\n      }\n    }));\n  };\n\n  onChangePagination = (\n    page,\n    total_pages = this.state.pagination.total_pages\n  ) => {\n    this.setState(prevState => ({\n      pagination: {\n        ...prevState.pagination,\n        page,\n        total_pages\n      }\n    }));\n  };\n\n  onReset = () => {\n    this.setState({ ...this.initialState });\n  };\n\n  render() {\n    const { filters, pagination } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"row mt-4\">\n          <div className=\"col-4\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h3>Фильтры:</h3>\n                <Filters\n                  filters={filters}\n                  pagination={pagination}\n                  onChangeFilter={this.onChangeFilter}\n                  onChangePagination={this.onChangePagination}\n                  onReset={this.onReset}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"col-8\">\n            <MoviesList\n              filters={filters}\n              pagination={pagination}\n              onChangePagination={this.onChangePagination}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\n\nconst tabs = [\n  {\n    link: \"Детали\",\n    path: \"details\"\n  },\n  {\n    link: \"Видео\",\n    path: \"videos\"\n  },\n  {\n    link: \"Актеры\",\n    path: \"actors\"\n  }\n];\n\nconst NavTabs = ({ match }) => (\n  <ul className=\"nav nav-tabs\">\n    {tabs.map((item, index) => (\n      <li className=\"nav-item\" key={index}>\n        <NavLink to={`${match.url}/${item.path}`} className=\"nav-link\">\n          {item.link}\n        </NavLink>\n      </li>\n    ))}\n  </ul>\n);\nexport default withRouter(NavTabs);\n","import React from \"react\";\nimport { Table } from \"reactstrap\";\n\n// const getValues = values => {\n//   values.map(item => item.name);\n// };\nexport default class MovieDetail extends React.Component {\n  static defaultProps = {\n    movieDetails: {\n      production_countries: [],\n      production_companies: [],\n      genres: []\n    }\n  };\n\n  render() {\n    const { movieDetails } = this.props;\n    const movieDataList = [\n      {\n        name: \"Статус\",\n        value: movieDetails.status\n      },\n      {\n        name: \"Дата выхода\",\n        value: movieDetails.release_date\n      },\n      {\n        name: \"Продолжительность\",\n        value: `${movieDetails.runtime}минут`\n      },\n      {\n        name: \"Язык оригинала\",\n        value: movieDetails.original_language\n      },\n      {\n        name: \"Страна\",\n        value: movieDetails.production_countries.map(item => item.name)\n      },\n      {\n        name: \"Бюджет\",\n        value: `${movieDetails.budget}$`\n      },\n      {\n        name: \"Сборы\",\n        value: `${movieDetails.revenue}$`\n      },\n      {\n        name: \"Компания\",\n        value: movieDetails.production_companies.map(item => item.name)\n      },\n      {\n        name: \"Жанры\",\n        value: movieDetails.genres.map(item => item.name)\n      }\n    ];\n\n    //console.log(movieDetails);\n    return (\n      <Table>\n        <tbody>\n          {movieDataList.map((item, index) => {\n            return (\n              <tr key={index}>\n                <th scope=\"row\">{item.name}</th>\n                <td>{`${item.value}`}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    );\n  }\n}\n","import React from \"react\";\nimport { Spinner } from \"reactstrap\";\n\nconst Loader = () => (\n  <div className=\"row justify-content-center mt-4\">\n    <div className=\"col-3\">\n      <Spinner color=\"primary\" />\n    </div>\n  </div>\n);\n\nexport default Loader;\n","import React from \"react\";\nimport CallApi from \"../../../../api/api\";\nimport { withRouter } from \"react-router-dom\";\nimport Loader from \"../../../UIComponents/Loader\";\n\nclass MovieVideos extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      movieVideos: [],\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      match: { params }\n    } = this.props;\n    CallApi.get(`/movie/${params.id}/videos`).then(data => {\n      this.setState({\n        movieVideos: data.results,\n        isLoading: false\n      });\n    });\n  }\n\n  render() {\n    const { movieVideos, isLoading } = this.state;\n    return isLoading ? (\n      <Loader />\n    ) : (\n      <div className=\"row\">\n        {movieVideos.map(item => (\n          <div className=\"col-6\" key={item.id}>\n            <iframe\n              title=\"video\"\n              width=\"100%\"\n              height=\"260\"\n              src={`https://www.youtube.com/embed/${item.key}`}\n              frameBorder=\"0\"\n              allowFullScreen\n            ></iframe>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(MovieVideos);\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport CallApi from \"../../../../api/api\";\nimport Image from \"../../../UIComponents/Image\";\nimport Loader from \"../../../UIComponents/Loader\";\n\nclass MovieActors extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      movieActors: [],\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      match: { params }\n    } = this.props;\n    CallApi.get(`/movie/${params.id}/credits`).then(data => {\n      this.setState({\n        movieActors: data,\n        isLoading: false\n      });\n    });\n  }\n\n  render() {\n    const { movieActors, isLoading } = this.state;\n    return isLoading ? (\n      <Loader />\n    ) : (\n      movieActors.cast.map(\n        item =>\n          item.profile_path && (\n            <Image\n              key={item.id}\n              className=\"pr-1 pb-1\"\n              alt=\"\"\n              path={item.profile_path}\n              width=\"150px\"\n              height=\"200px\"\n            />\n          )\n      )\n    );\n  }\n}\nexport default withRouter(MovieActors);\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport NavTabs from \"./NavTabs\";\nimport MovieDetail from \"./MovieDetail\";\nimport MovieVideos from \"./MovieVideos\";\nimport MovieActors from \"./MovieActors\";\n\nexport default class MoviePageTabs extends React.Component {\n  render() {\n    const { movieDetails } = this.props;\n    return (\n      <div className=\"row justify-content-center mt-4\">\n        <div className=\"col-9\">\n          <NavTabs />\n          <div className=\"content\">\n            <Switch>\n              <Route path=\"/movie/:id/details\">\n                <MovieDetail movieDetails={movieDetails} />\n              </Route>\n              <Route path=\"/movie/:id/videos\" component={MovieVideos} />\n              <Route path=\"/movie/:id/actors\" component={MovieActors} />\n            </Switch>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { StarBorder } from \"@material-ui/icons\";\nimport { BookmarkBorder } from \"@material-ui/icons\";\n\nconst MovieOverview = ({ title, overview }) => (\n  <React.Fragment>\n    <h1>{title}</h1>\n    <div className=\"mb-3\">\n      <StarBorder />\n      <BookmarkBorder />\n    </div>\n    <p>{overview}</p>\n  </React.Fragment>\n);\nexport default MovieOverview;\n","import React from \"react\";\nimport CallApi from \"../../../api/api\";\nimport MoviePageTabs from \"./MoviePageTabs/MoviePageTabs\";\nimport Image from \"../../UIComponents/Image\";\nimport MovieOverview from \"./MovieOverview\";\nimport Loader from \"../../UIComponents/Loader\";\n\nexport default class MoviePage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      movieDetails: [],\n      isLoading: true\n    };\n  }\n  componentDidMount() {\n    const {\n      match: { params }\n    } = this.props;\n    CallApi.get(`/movie/${params.id}`, {\n      params: {\n        language: \"ru-RU\"\n      }\n    }).then(data => {\n      this.setState({\n        movieDetails: data,\n        isLoading: false\n      });\n    });\n  }\n\n  render() {\n    const { movieDetails, isLoading } = this.state;\n    return (\n      <div className=\"container\">\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <React.Fragment>\n            <div className=\"row justify-content-center mt-4\">\n              <div className=\"col-3\">\n                <Image path={movieDetails.poster_path} width=\"100%\" alt=\"\" />\n              </div>\n              <div className=\"col-6\">\n                <MovieOverview\n                  title={movieDetails.title}\n                  overview={movieDetails.overview}\n                />\n              </div>\n            </div>\n            <MoviePageTabs movieDetails={movieDetails} />\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Header from \"./Header/Header\";\nimport CallApi from \"../api/api\";\nimport MoviesPage from \"./pages/MoviesPage/MoviesPage\";\nimport MoviePage from \"./pages/MoviePage/MoviePage\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  actionCreatorUpdateAuth,\n  actionCreatorLogOut,\n  actionCreatorShowLoginModal,\n  actionCreatorFavoriteList,\n  actionCreatorWatchList\n} from \"../actions/actions\";\n\nexport const UserContext = React.createContext();\nexport const AuthContext = React.createContext();\n\nclass App extends React.Component {\n  handleLogOut = () => {\n    const { session_id } = this.props;\n    CallApi.delete(\"/authentication/session\", {\n      body: {\n        session_id\n      }\n    }).then(() => {\n      this.props.onLogOut();\n    });\n  };\n\n  getFavoriteList = () => {\n    const { session_id, user } = this.props;\n    return CallApi.get(`/account/${user.id}/favorite/movies`, {\n      params: {\n        session_id\n      }\n    }).then(data => {\n      let favorite_movies = data.results;\n      this.props.updateFavoriteList(favorite_movies);\n    });\n  };\n\n  getWatchList = () => {\n    const { session_id, user } = this.props;\n    return CallApi.get(`/account/${user.id}/watchlist/movies`, {\n      params: {\n        session_id\n      }\n    }).then(data => {\n      let watchlist = data.results;\n      this.props.updateWatchList(watchlist);\n    });\n  };\n\n  getUser = session_id => {\n    return CallApi.get(\"/account\", {\n      params: {\n        session_id\n      }\n    });\n  };\n\n  componentDidMount() {\n    const { session_id } = this.props;\n    if (session_id) {\n      this.getUser(session_id).then(user => {\n        this.props.updateAuth(user, session_id);\n        this.getFavoriteList();\n        this.getWatchList();\n      });\n    }\n  }\n\n  render() {\n    const {\n      user,\n      session_id,\n      watchlist,\n      showLoginModal,\n      favorite_movies,\n      updateAuth,\n      toggleLoginModal\n    } = this.props;\n    return (\n      <BrowserRouter basename=\"/reactwarriors-movie-app\">\n        <UserContext.Provider\n          value={{\n            user,\n            updateAuth,\n            getUser: this.getUser,\n            favorite_movies,\n            getFavoriteList: this.getFavoriteList,\n            watchlist,\n            getWatchList: this.getWatchList\n          }}\n        >\n          <AuthContext.Provider\n            value={{\n              session_id,\n              handleLogOut: this.handleLogOut,\n              showLoginModal,\n              toggleLoginModal\n            }}\n          >\n            <div>\n              <Header />\n              <Route exact path=\"/\" component={MoviesPage} />\n              <Route path=\"/movie/:id\" component={MoviePage} />\n            </div>\n          </AuthContext.Provider>\n        </UserContext.Provider>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user,\n    session_id: state.auth.session_id,\n    showLoginModal: state.auth.showLoginModal,\n    favorite_movies: state.movies.favorite_movies,\n    watchlist: state.movies.watchlist\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateAuth: (user, session_id) =>\n      dispatch(\n        actionCreatorUpdateAuth({\n          user,\n          session_id\n        })\n      ),\n    toggleLoginModal: () => dispatch(actionCreatorShowLoginModal()),\n    updateFavoriteList: favorite_movies =>\n      dispatch(actionCreatorFavoriteList({ favorite_movies })),\n    updateWatchList: watchlist =>\n      dispatch(actionCreatorWatchList({ watchlist })),\n    onLogOut: () => dispatch(actionCreatorLogOut())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","export const actionCreatorUpdateAuth = payload => {\n  return {\n    type: \"UPDATE_AUTH\",\n    payload\n  };\n};\n\nexport const actionCreatorLogOut = () => {\n  return {\n    type: \"LOGOUT\"\n  };\n};\n\nexport const actionCreatorShowLoginModal = () => {\n  return {\n    type: \"LOGINMODAL\"\n  };\n};\n\nexport const actionCreatorFavoriteList = payload => {\n  return {\n    type: \"FAVORITEMOVIES\",\n    payload\n  };\n};\n\nexport const actionCreatorWatchList = payload => {\n  return {\n    type: \"WATCHMOVIES\",\n    payload\n  };\n};\n","import Cookies from \"universal-cookie\";\n\nconst cookies = new Cookies();\n\nconst initialState = {\n  user: null,\n  session_id: cookies.get(\"session_id\"),\n  showLoginModal: false\n};\n\nconst reducerAuth = (state = initialState, action) => {\n  switch (action.type) {\n    case \"UPDATE_AUTH\":\n      cookies.set(\"session_id\", action.payload.session_id, {\n        path: \"/\",\n        maxAge: 2592000\n      });\n      return {\n        ...state,\n        user: action.payload.user,\n        session_id: action.payload.session_id\n      };\n    case \"LOGOUT\":\n      cookies.remove(\"session_id\");\n      return {\n        initialState\n      };\n    case \"LOGINMODAL\":\n      return {\n        ...state,\n        showLoginModal: true\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducerAuth;\n","const initialState = {\n  favorite_movies: [],\n  watchlist: []\n};\n\nconst reducerMovies = (state = initialState, action) => {\n  switch (action.type) {\n    case \"FAVORITEMOVIES\":\n      return {\n        ...state,\n        favorite_movies: action.payload.favorite_movies\n      };\n    case \"WATCHMOVIES\":\n      return {\n        ...state,\n        watchlist: action.payload.watchlist\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducerMovies;\n","import { combineReducers } from \"redux\";\nimport reducerAuth from \"./reducerAuth\";\nimport reducerMovies from \"./reducerMovies\";\n\nconst reducer = combineReducers({\n  auth: reducerAuth,\n  movies: reducerMovies\n});\n\nexport default reducer;\n","import { createStore } from \"redux\";\nimport reducer from \"../reducers/combineReducers\";\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./stylesheets/index.scss\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}