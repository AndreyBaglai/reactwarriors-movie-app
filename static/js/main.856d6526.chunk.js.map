{"version":3,"sources":["api/api.js","components/Header/Login/validate.js","components/Header/Login/Field.jsx","components/HOC/withUser.jsx","components/HOC/withAuth.jsx","components/Header/Login/LoginForm.jsx","components/Header/Login/Login.jsx","components/Header/UserMenu.jsx","components/Header/Header.jsx","components/Filters/SortBy.jsx","components/Filters/ReleaseYear.jsx","components/Filters/Genres/Genres.jsx","components/Filters/Genres/GenresHOC.jsx","components/Filters/Pagination.jsx","components/Filters/Filters.jsx","components/Movies/Favorite.jsx","components/Movies/WillWatch.jsx","components/UIComponents/Image.jsx","components/Movies/MovieItem.jsx","components/Movies/MoviesList.jsx","components/Movies/MoviesHOC.jsx","components/pages/MoviesPage/MoviesPage.jsx","components/pages/MoviePage/MoviePageTabs/NavTabs.jsx","components/pages/MoviePage/MoviePageTabs/MovieDetail.jsx","components/UIComponents/Loader.jsx","components/pages/MoviePage/MoviePageTabs/MovieVideos.jsx","components/pages/MoviePage/MoviePageTabs/MovieActors.jsx","components/pages/MoviePage/MoviePageTabs/MoviePageTabs.jsx","components/pages/MoviePage/MovieOverview.jsx","components/pages/MoviePage/MoviePage.jsx","components/App.jsx","index.js"],"names":["API_URL","API_KEY_3","fetchApi","url","options","arguments","length","undefined","Promise","resolve","reject","fetch","then","response","status","json","data","catch","error","CallApi","_options$params","params","queryStringParams","Object","objectSpread","api_key","concat","queryString","stringify","mode","headers","Content-type","_options$params2","_options$body","body","method","JSON","_options$params3","_options$body2","validateFields","values","errors","username","password","repeatPassword","Field","_this$props","this","props","id","labelText","type","placeholder","name","value","onChange","handleBlur","react_default","a","createElement","className","htmlFor","classNames","invalid","onBlur","React","Component","HOC_withUser","_React$Component","withUser","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","_this","UserContext","Consumer","context","assign","HOC_withAuth","withAuth","AuthContext","LoginForm","call","e","target","setState","prevState","defineProperty","base","event","state","keys","console","log","onSubmit","_this$state$values","updateUser","updateSessionId","getFavoriteList","getWatchList","getUser","submitting","get","post","request_token","session_id","user","status_message","onLogin","preventDefault","_this$state","_this$state$values2","Field_Field","onClick","disabled","showLoginModal","toggleLoginModal","Modal","isOpen","toggle","ModalBody","Login_LoginForm","UserMenu","toggleDropdown","dropdownOpen","handleLogOut","Dropdown","DropdownToggle","tag","data-toggle","aria-expanded","width","src","avatar","gravatar","hash","alt","DropdownMenu","right","DropdownItem","href","Header_UserMenu","Header_Login_Login","SortBy","sort_by","onChangeFilter","map","option","label","PureComponent","defaultProps","years","i","push","getYear","ReleaseYear","primary_release_year","item","Genres","_ref","genres","with_genres","onChangeGenres","genre","checked","includes","String","GenresHOC","_React$PureComponent","check","toConsumableArray","filter","Number","_this2","language","Pagination","onChangePagination","page","total_pages","bind","Filters","_this$props$filters","filters","_this$props$paginatio","pagination","onReset","SortBy_SortBy","ReleaseYear_ReleaseYear","Filters_Genres_Genres","Pagination_Pagination","Favorite","markAsFavorite","movieId","favorite_movies","isLoading","media_type","media_id","favorite","getCurrentFavorite","some","_this$props2","isFavorite","style","pointerEvents","Star","StarBorder","WillWatch","addToWatchList","watchlist","getCurrentWatchList","isWillWatch","Bookmark","BookmarkBorder","Image","path","rest","objectWithoutProperties","MovieItem","UIComponents_Image","backdrop_path","poster_path","react_router_dom","to","title","vote_average","Movies_Favorite","Movies_WillWatch","MoviesList","movies","movie","Movies_MovieItem","MoviesHOC","getMovies","results","prevProps","_","isEqual","MoviesPage","initialState","Filters_Filters","Movies_MoviesList","tabs","link","withRouter","match","index","MovieDetail","movieDetails","movieDataList","release_date","runtime","original_language","production_countries","budget","revenue","production_companies","Table","scope","Loader","Spinner","color","MovieVideos","movieVideos","UIComponents_Loader","height","frameBorder","allowFullScreen","MovieActors","movieActors","cast","profile_path","MoviePageTabs","MoviePageTabs_NavTabs","react_router","MovieDetail_MovieDetail","component","MovieOverview","overview","Fragment","MoviePage","MoviePage_MovieOverview","MoviePageTabs_MoviePageTabs","cookies","Cookies","createContext","App","set","maxAge","delete","onLogOut","remove","Provider","components_Header_Header","exact","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.856d6526.chunk.js","sourcesContent":["import queryString from \"query-string\";\n\nexport const API_URL = \"https://api.themoviedb.org/3\";\n\nexport const API_KEY_3 = \"4237669ebd35e8010beee2f55fd45546\";\n\nexport const API_KEY_4 =\n  \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0MjM3NjY5ZWJkMzVlODAxMGJlZWUyZjU1ZmQ0NTU0NiIsInN1YiI6IjVkMzc0NjVkZTU0ZDVkMjBhNGRiZDRlNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.QkywZtcqMOTYX-fvvag8B-1DVXxaFEgVDumJkqV6oE0\";\n\nexport const fetchApi = (url, options = {}) => {\n  return new Promise((resolve, reject) => {\n    fetch(url, options)\n      .then(response => {\n        if (response.status < 400) {\n          return response.json();\n        } else {\n          throw response;\n        }\n      })\n      .then(data => {\n        resolve(data);\n      })\n      .catch(response => {\n        response.json().then(error => {\n          reject(error);\n        });\n      });\n  });\n};\n\nexport default class CallApi {\n  static get(url, options = {}) {\n    const { params = {} } = options;\n    const queryStringParams = {\n      api_key: API_KEY_3,\n      ...params\n    };\n    return fetchApi(\n      `${API_URL}${url}?${queryString.stringify(queryStringParams)}`,\n      {\n        mode: \"cors\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      }\n    );\n  }\n\n  static post(url, options = {}) {\n    const { params = {}, body = {} } = options;\n    const queryStringParams = {\n      api_key: API_KEY_3,\n      ...params\n    };\n    return fetchApi(\n      `${API_URL}${url}?${queryString.stringify(queryStringParams)}`,\n      {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      }\n    );\n  }\n\n  static delete(url, options = {}) {\n    const { params = {}, body = {} } = options;\n    const queryStringParams = {\n      api_key: API_KEY_3,\n      ...params\n    };\n    return fetchApi(\n      `${API_URL}${url}?${queryString.stringify(queryStringParams)}`,\n      {\n        method: \"DELETE\",\n        mode: \"cors\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      }\n    );\n  }\n}\n","const validateFields = values => {\n  const errors = {};\n\n  if (values.username === \"\") {\n    errors.username = \"Not empty\";\n  }\n  if (values.password === \"\") {\n    errors.password = \"Required\";\n  }\n  if (values.repeatPassword !== values.password) {\n    errors.repeatPassword = \"Must be equal password\";\n  }\n  return errors;\n};\n\nexport default validateFields;\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nexport default class Field extends React.Component {\n  render() {\n    const {\n      id,\n      labelText,\n      type,\n      placeholder,\n      name,\n      value,\n      onChange,\n      handleBlur,\n      error\n    } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label htmlFor={id}>{labelText}</label>\n        <input\n          type={type}\n          className={classNames(\"form-control\", {\n            invalid: error\n          })}\n          id={id}\n          placeholder={placeholder}\n          name={name}\n          value={value}\n          onChange={onChange}\n          onBlur={handleBlur}\n        />\n        {error && <div className=\"invalid-feedback\">{error}</div>}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { UserContext } from \"../App\";\n\nexport default Component =>\n  class withUser extends React.Component {\n    render() {\n      return (\n        <UserContext.Consumer>\n          {context => <Component {...this.props} {...context} />}\n        </UserContext.Consumer>\n      );\n    }\n  };\n","import React from \"react\";\nimport { AuthContext } from \"../App\";\n\nexport default Component =>\n  class withAuth extends React.Component {\n    render() {\n      return (\n        <AuthContext.Consumer>\n          {context => <Component {...this.props} {...context} />}\n        </AuthContext.Consumer>\n      );\n    }\n  };\n","import React from \"react\";\nimport CallApi from \"../../../api/api\";\nimport validateFields from \"./validate\";\nimport Field from \"./Field\";\nimport withUser from \"../../HOC/withUser\";\nimport withAuth from \"../../HOC/withAuth\";\n\nclass LoginForm extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      values: {\n        username: \"belka\",\n        password: \"zxcvbn\",\n        repeatPassword: \"zxcvbn\"\n      },\n      errors: {},\n      submitting: false\n    };\n  }\n\n  onChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState(prevState => ({\n      values: {\n        ...prevState.values,\n        [name]: value\n      },\n      errors: {\n        ...prevState.errors,\n        base: null,\n        [name]: null\n      }\n    }));\n  };\n\n  handleBlur = event => {\n    const name = event.target.name;\n    const errors = validateFields(this.state.values);\n    if (Object.keys(errors).length > 0) {\n      this.setState(prevState => ({\n        errors: {\n          ...prevState.errors,\n          [name]: errors[name]\n        }\n      }));\n    }\n    console.log(\"on blur\");\n  };\n\n  onSubmit = () => {\n    const {\n      values: { username, password }\n    } = this.state;\n    const {\n      updateUser,\n      updateSessionId,\n      getFavoriteList,\n      getWatchList,\n      getUser\n    } = this.props;\n    this.setState({\n      submitting: true\n    });\n    CallApi.get(\"/authentication/token/new\")\n      .then(data => {\n        return CallApi.post(\"/authentication/token/validate_with_login\", {\n          body: {\n            username,\n            password,\n            request_token: data.request_token\n          }\n        });\n      })\n      .then(data => {\n        return CallApi.post(\"/authentication/session/new\", {\n          body: {\n            request_token: data.request_token\n          }\n        });\n      })\n      .then(data => {\n        updateSessionId(data.session_id);\n        return getUser(data.session_id);\n      })\n      .then(user => {\n        this.setState(\n          {\n            submitting: false\n          },\n          () => {\n            updateUser(user);\n          }\n        );\n      })\n      .then(() => {\n        getFavoriteList();\n      })\n      .then(() => {\n        getWatchList();\n      })\n      .catch(error => {\n        console.log(\"error\", error);\n        this.setState({\n          submitting: false,\n          errors: {\n            base: error.status_message\n          }\n        });\n      });\n  };\n\n  onLogin = e => {\n    e.preventDefault();\n    const errors = validateFields(this.state.values);\n    if (Object.keys(errors).length > 0) {\n      this.setState(prevState => ({\n        errors: {\n          ...prevState.errors,\n          ...errors\n        }\n      }));\n    } else {\n      this.onSubmit();\n    }\n  };\n\n  render() {\n    const {\n      values: { username, password, repeatPassword },\n      errors,\n      submitting\n    } = this.state;\n    return (\n      <div className=\"form-login-container\">\n        <form className=\"form-login\">\n          <h1 className=\"h3 mb-3 font-weight-normal text-center\">\n            Авторизация\n          </h1>\n          <Field\n            id=\"username\"\n            labelText=\"Пользователь\"\n            type=\"text\"\n            placeholder=\"Пользователь\"\n            name=\"username\"\n            value={username}\n            onChange={this.onChange}\n            handleBlur={this.handleBlur}\n            error={errors.username}\n          />\n          <Field\n            id=\"password\"\n            labelText=\"Пароль\"\n            type=\"password\"\n            placeholder=\"Пароль\"\n            name=\"password\"\n            value={password}\n            onChange={this.onChange}\n            handleBlur={this.handleBlur}\n            error={errors.password}\n          />\n          <Field\n            id=\"repeatPassword\"\n            labelText=\"Повторите пароль\"\n            type=\"password\"\n            placeholder=\"Повторите пароль\"\n            name=\"repeatPassword\"\n            value={repeatPassword}\n            onChange={this.onChange}\n            handleBlur={this.handleBlur}\n            error={errors.repeatPassword}\n          />\n          <button\n            type=\"submit\"\n            className=\"btn btn-lg btn-primary btn-block\"\n            onClick={this.onLogin}\n            disabled={submitting}\n          >\n            Вход\n          </button>\n          {errors.base && (\n            <div className=\"invalid-feedback text-center\">{errors.base}</div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withUser(withAuth(LoginForm));\n","import React from \"react\";\nimport { Modal, ModalBody } from \"reactstrap\";\nimport LoginForm from \"./LoginForm\";\nimport withAuth from \"../../HOC/withAuth\";\n\nclass Login extends React.Component {\n  render() {\n    const { showLoginModal, toggleLoginModal } = this.props;\n    return (\n      <div>\n        <button\n          className=\"btn btn-success\"\n          type=\"button\"\n          onClick={toggleLoginModal}\n        >\n          Login\n        </button>\n        <Modal isOpen={showLoginModal} toggle={toggleLoginModal}>\n          <ModalBody>\n            <LoginForm />\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(Login);\n\n//async/await\n// try {\n//   const data = await fetchApi(\n//     `${API_URL}/authentication/token/new?api_key=${API_KEY_3}`\n//   );\n//   const result = await fetchApi(\n//     `${API_URL}/authentication/token/validate_with_login?api_key=${API_KEY_3}`,\n//     {\n//       method: \"POST\",\n//       mode: \"cors\",\n//       headers: {\n//         \"Content-type\": \"application/json\"\n//       },\n//       body: JSON.stringify({\n//         username: \"belka\",\n//         password: \"zxcvbn\",\n//         request_token: data.request_token\n//       })\n//     }\n//   );\n//   const { session_id } = await fetchApi(\n//     `${API_URL}/authentication/session/new?api_key=${API_KEY_3}`,\n//     {\n//       method: \"POST\",\n//       mode: \"cors\",\n//       headers: {\n//         \"Content-type\": \"application/json\"\n//       },\n//       body: JSON.stringify({\n//         request_token: result.request_token\n//       })\n//     }\n//   );\n//   console.log(session_id);\n// } catch (error) {\n//   console.log(\"error\", error);\n// }\n\n// const getRequestToken = () => {\n//   return new Promise((resolve, reject) => {\n//     fetch(`${API_URL}/authentication/token/new?api_key=${API_KEY_3}`)\n//       .then(response => {\n//         if (response.status < 400) {\n//           return response.json();\n//         } else {\n//           throw response;\n//         }\n//       })\n//       .then(data => {\n//         resolve(data);\n//       })\n//       .catch(response => {\n//         response.json().then(error => {\n//           reject(error);\n//         });\n//       });\n//   });\n// };\n\n// const validateWithLogin = body => {\n//   return new Promise((resolve, reject) => {\n//     fetch(\n//       `${API_URL}/authentication/token/validate_with_login?api_key=${API_KEY_3}`,\n//       {\n//         method: \"POST\",\n//         mode: \"cors\",\n//         headers: {\n//           \"Content-type\": \"application/json\"\n//         },\n//         body: JSON.stringify(body)\n//       }\n//     )\n//       .then(response => {\n//         if (response.status < 400) {\n//           return response.json();\n//         } else {\n//           throw response;\n//         }\n//       })\n//       .then(data => {\n//         resolve(data);\n//       })\n//       .catch(response => {\n//         response.json().then(error => {\n//           reject(error);\n//         });\n//       });\n//   });\n// };\n\n// fetch(`${API_URL}/authentication/token/new?api_key=${API_KEY_3}`)\n//   .then(response => response.json())\n//   .then(data => {\n//     fetch(\n//       `${API_URL}/authentication/token/validate_with_login?api_key=${API_KEY_3}`,\n//       {\n//         method: \"POST\",\n//         mode: \"cors\",\n//         headers: {\n//           \"Content-type\": \"application/json\"\n//         },\n//         body: JSON.stringify({\n//           username: \"belka\",\n//           password: \"zxcvbn\",\n//           request_token: data.request_token\n//         })\n//       }\n//     )\n//       .then(response => response.json())\n//       .then(data => {\n//         fetch(\n//           `${API_URL}/authentication/session/new?api_key=${API_KEY_3}`,\n//           {\n//             method: \"POST\",\n//             mode: \"cors\",\n//             headers: {\n//               \"Content-type\": \"application/json\"\n//             },\n//             body: JSON.stringify({\n//               request_token: data.request_token\n//             })\n//           }\n//         )\n//           .then(response => response.json())\n//           .then(data => {\n//             console.log(\"session\", data);\n//           });\n//       });\n//   });\n","import React from \"react\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\nimport withUser from \"../HOC/withUser\";\nimport withAuth from \"../HOC/withAuth\";\n\nclass UserMenu extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      dropdownOpen: false\n    };\n  }\n\n  toggleDropdown = () => {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  };\n\n  render() {\n    const { dropdownOpen } = this.state;\n    const { user, handleLogOut } = this.props;\n    return (\n      <Dropdown isOpen={dropdownOpen} toggle={this.toggleDropdown}>\n        <DropdownToggle\n          tag=\"div\"\n          onClick={this.toggleDropdown}\n          data-toggle=\"dropdown\"\n          aria-expanded={dropdownOpen}\n        >\n          <img\n            width=\"40\"\n            className=\"rounded-circle\"\n            src={`https://secure.gravatar.com/avatar/${user.avatar.gravatar.hash}.jpg?s=64\"`}\n            alt=\"\"\n            onClick={this.toggleDropdown}\n          />\n        </DropdownToggle>\n        <DropdownMenu right>\n          <DropdownItem onClick={handleLogOut}>Выйти</DropdownItem>\n        </DropdownMenu>\n      </Dropdown>\n    );\n  }\n}\n\nexport default withUser(withAuth(UserMenu));\n","import React from \"react\";\nimport Login from \"./Login/Login\";\nimport UserMenu from \"./UserMenu\";\nimport withUser from \"../HOC/withUser\";\n\nclass Header extends React.Component {\n  render() {\n    const { user } = this.props;\n    return (\n      <nav className=\"navbar navbar-dark bg-primary\">\n        <div className=\"container\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item active\">\n              <a href=\"#\" className=\"nav-link\">\n                Home\n              </a>\n            </li>\n          </ul>\n          {user ? <UserMenu /> : <Login />}\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default withUser(Header);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class SortBy extends React.PureComponent {\n  static propTypes = {\n    sort_by: PropTypes.string.isRequired,\n    onChangeFilter: PropTypes.func.isRequired\n  };\n  static defaultProps = {\n    options: [\n      {\n        label: \"Популярные по убыванию\",\n        value: \"popularity.desc\"\n      },\n      {\n        label: \"Популярные по возростанию\",\n        value: \"popularity.asc\"\n      },\n      {\n        label: \"Рейтинг по убыванию\",\n        value: \"vote_average.desc\"\n      },\n      {\n        label: \"Рейтинг по возростанию\",\n        value: \"vote_average.asc\"\n      }\n    ]\n  };\n  render() {\n    const { sort_by, onChangeFilter, options } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label htmlFor=\"sort_by\">Сортировать по:</label>\n        <select\n          className=\"form-control\"\n          id=\"sort_by\"\n          name=\"sort_by\"\n          value={sort_by}\n          onChange={onChangeFilter}\n        >\n          {options.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </select>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst getYear = () => {\n  const options = [];\n  for (let i = 2019; i >= 2000; i--) {\n    options.push(i);\n  }\n  return options;\n};\nconst years = getYear();\n\nexport default class ReleaseYear extends React.PureComponent {\n  static propTypes = {\n    primary_release_year: PropTypes.string.isRequired,\n    onChangeFilter: PropTypes.func.isRequired\n  };\n\n  render() {\n    const { onChangeFilter, primary_release_year } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label htmlFor=\"primary_release_year\">Год релиза:</label>\n        <select\n          className=\"form-control\"\n          id=\"primary_release_year\"\n          name=\"primary_release_year\"\n          value={primary_release_year}\n          onChange={onChangeFilter}\n        >\n          <option>Выберите год</option>\n          {years.map(item => (\n            <option value={item} key={item}>\n              {item}\n            </option>\n          ))}\n        </select>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GenresHOC from \"./GenresHOC\";\n\nconst Genres = ({ genres, with_genres, onChangeGenres }) => (\n  <div>\n    <div>Выберите жанр:</div>\n    {genres.map(genre => (\n      <div className=\"form-check\" key={genre.id}>\n        <input\n          className=\"form-check-input\"\n          type=\"checkbox\"\n          id={`genre-${genre.id}`}\n          name=\"with_genres\"\n          checked={with_genres.includes(String(genre.id))}\n          value={genre.id}\n          onChange={onChangeGenres}\n        />\n        <label className=\"form-check-label\" htmlFor={`genre-${genre.id}`}>\n          {genre.name}\n        </label>\n      </div>\n    ))}\n  </div>\n);\n\nGenres.defaultProps = {\n  genres: [],\n  with_genres: []\n};\n\nGenres.propTypes = {\n  genres: PropTypes.array.isRequired,\n  with_genres: PropTypes.array.isRequired,\n  onChangeGenres: PropTypes.func.isRequired\n};\nexport default GenresHOC(Genres);\n","import React from \"react\";\nimport CallApi from \"../../../api/api\";\nimport PropTypes from \"prop-types\";\n\nexport default Component =>\n  class GenresHOC extends React.PureComponent {\n    constructor() {\n      super();\n\n      this.state = {\n        genres: []\n      };\n    }\n    static propTypes = {\n      with_genres: PropTypes.array.isRequired,\n      onChangeFilter: PropTypes.func.isRequired\n    };\n\n    componentDidMount() {\n      CallApi.get(\"/genre/movie/list\", {\n        params: {\n          language: \"ru-RU\"\n        }\n      }).then(data => {\n        this.setState({\n          genres: data.genres\n        });\n      });\n    }\n\n    onChangeGenres = event => {\n      const { with_genres } = this.props;\n      const check = event.target.checked;\n      const value = event.target.value;\n      this.props.onChangeFilter({\n        target: {\n          name: \"with_genres\",\n          value: check\n            ? [...with_genres, value]\n            : with_genres.filter(genre => Number(genre) !== Number(value))\n        }\n      });\n    };\n\n    render() {\n      const { genres } = this.state;\n      const { with_genres } = this.props;\n      return (\n        <Component\n          genres={genres}\n          with_genres={with_genres}\n          onChangeGenres={this.onChangeGenres}\n        />\n      );\n    }\n  };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class Pagination extends React.PureComponent {\n  static propTypes = {\n    page: PropTypes.number.isRequired,\n    total_pages: PropTypes.number.isRequired,\n    onChangePagination: PropTypes.func.isRequired\n  };\n\n  render() {\n    const { onChangePagination, page, total_pages } = this.props;\n    return (\n      <div>\n        <div className=\"btn-group\">\n          <button\n            type=\"button\"\n            className=\"btn btn-light mr-2\"\n            disabled={page === 1}\n            onClick={onChangePagination.bind(null, page - 1, total_pages)}\n          >\n            Назад\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-light\"\n            onClick={onChangePagination.bind(null, page + 1, total_pages)}\n          >\n            Вперед\n          </button>\n        </div>\n        <div>\n          {page} of {total_pages}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport SortBy from \"./SortBy\";\nimport ReleaseYear from \"./ReleaseYear\";\nimport Genres from \"./Genres/Genres\";\nimport Pagination from \"./Pagination\";\n\nexport default class Filters extends React.Component {\n  render() {\n    const {\n      filters: { sort_by, primary_release_year, with_genres },\n      pagination: { page, total_pages },\n      onChangeFilter,\n      onChangePagination,\n      onReset\n    } = this.props;\n    return (\n      <form className=\"mb-3\">\n        <div>\n          <button type=\"button\" className=\"btn btn-light\" onClick={onReset}>\n            Очистить фильтры\n          </button>\n        </div>\n        <SortBy onChangeFilter={onChangeFilter} sort_by={sort_by} />\n        <ReleaseYear\n          onChangeFilter={onChangeFilter}\n          primary_release_year={primary_release_year}\n        />\n        <Genres onChangeFilter={onChangeFilter} with_genres={with_genres} />\n        <Pagination\n          onChangePagination={onChangePagination}\n          page={page}\n          total_pages={total_pages}\n        />\n      </form>\n    );\n  }\n}\n","import React from \"react\";\nimport CallApi from \"../../api/api\";\nimport { Star, StarBorder } from \"@material-ui/icons\";\nimport withUser from \"../HOC/withUser\";\nimport withAuth from \"../HOC/withAuth\";\n\nclass Favorite extends React.PureComponent {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: false\n    };\n  }\n\n  markAsFavorite = () => {\n    const {\n      user,\n      session_id,\n      movieId,\n      favorite_movies,\n      getFavoriteList,\n      toggleLoginModal\n    } = this.props;\n    if (session_id) {\n      this.setState(\n        {\n          isLoading: true\n        },\n        () => {\n          CallApi.post(`/account/${user.id}/favorite`, {\n            params: {\n              session_id\n            },\n            body: {\n              media_type: \"movie\",\n              media_id: movieId,\n              favorite: !this.getCurrentFavorite(favorite_movies, movieId)\n            }\n          }).then(() => {\n            getFavoriteList().then(() => {\n              this.setState({\n                isLoading: false\n              });\n            });\n          });\n        }\n      );\n    } else {\n      toggleLoginModal();\n    }\n  };\n\n  getCurrentFavorite = (favorite_movies, movieId) =>\n    favorite_movies.some(item => item.id === movieId);\n\n  render() {\n    const { isLoading } = this.state;\n    const { favorite_movies, movieId } = this.props;\n    const isFavorite = this.getCurrentFavorite(favorite_movies, movieId);\n    //console.log(isFavorite);\n    return (\n      <div\n        className=\"d-inline-flex\"\n        onClick={this.markAsFavorite}\n        style={{ pointerEvents: isLoading ? \"none\" : \"auto\" }}\n      >\n        {isFavorite ? <Star /> : <StarBorder />}\n      </div>\n    );\n  }\n}\n\nexport default withUser(withAuth(Favorite));\n\n// componentDidMount() {\n//   this.props.favorite_movies.map(item => {\n//     if (item.id === this.props.itemId) {\n//       return this.setState({\n//         isFavorite: true\n//       });\n//     } else {\n//       return false;\n//     }\n//   });\n// }\n\n// componentDidUpdate(prevProps) {\n//   if (!_.isEqual(this.props.favorite_movies, prevProps.favorite_movies)) {\n//     this.props.favorite_movies.map(item => {\n//       if (item.id === this.props.itemId) {\n//         return this.setState({\n//           isFavorite: true\n//         });\n//       } else {\n//         return false;\n//       }\n//     });\n//   }\n// }\n","import React from \"react\";\nimport CallApi from \"../../api/api\";\nimport { Bookmark, BookmarkBorder } from \"@material-ui/icons\";\nimport withUser from \"../HOC/withUser\";\nimport withAuth from \"../HOC/withAuth\";\n\nclass WillWatch extends React.PureComponent {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: false\n    };\n  }\n\n  addToWatchList = () => {\n    const {\n      user,\n      session_id,\n      movieId,\n      watchlist,\n      getWatchList,\n      toggleLoginModal\n    } = this.props;\n    if (session_id) {\n      this.setState(\n        {\n          isLoading: true\n        },\n        () => {\n          CallApi.post(`/account/${user.id}/watchlist`, {\n            params: {\n              session_id\n            },\n            body: {\n              media_type: \"movie\",\n              media_id: movieId,\n              watchlist: !this.getCurrentWatchList(watchlist, movieId)\n            }\n          }).then(() => {\n            getWatchList().then(() => {\n              this.setState({\n                isLoading: false\n              });\n            });\n          });\n        }\n      );\n    } else {\n      toggleLoginModal();\n    }\n  };\n\n  getCurrentWatchList = (watchlist, movieId) =>\n    watchlist.some(item => item.id === movieId);\n\n  render() {\n    const { isLoading } = this.state;\n    const { watchlist, movieId } = this.props;\n    const isWillWatch = this.getCurrentWatchList(watchlist, movieId);\n    //console.log(isWillWatch);\n    return (\n      <div\n        className=\"d-inline-flex\"\n        onClick={this.addToWatchList}\n        style={{ pointerEvents: isLoading ? \"none\" : \"auto\" }}\n      >\n        {isWillWatch ? <Bookmark /> : <BookmarkBorder />}\n      </div>\n    );\n  }\n}\nexport default withUser(withAuth(WillWatch));\n\n// componentDidMount() {\n//   this.props.watchlist.map(item => {\n//     if (item.id === this.props.itemId) {\n//       return this.setState({\n//         isWillWatch: true\n//       });\n//     } else {\n//       return false;\n//     }\n//   });\n// }\n\n// componentDidUpdate(prevProps) {\n//   if (!_.isEqual(this.props.watchlist, prevProps.watchlist)) {\n//     this.props.watchlist.map(item => {\n//       if (item.id === this.props.itemId) {\n//         return this.setState({\n//           isWillWatch: true\n//         });\n//       } else {\n//         return false;\n//       }\n//     });\n//   }\n// }\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Image = ({ path, ...rest }) => (\n  <img src={`https://image.tmdb.org/t/p/w500${path}`} {...rest} />\n);\n\nImage.propTypes = {\n  path: PropTypes.string.isRequired\n};\n\nexport default Image;\n","import React from \"react\";\nimport Favorite from \"./Favorite\";\nimport WillWatch from \"./WillWatch\";\nimport { Link } from \"react-router-dom\";\nimport Image from \"../UIComponents/Image\";\n\nclass MovieItem extends React.PureComponent {\n  render() {\n    const { item } = this.props;\n    return (\n      <div className=\"card\" style={{ width: \"100%\" }}>\n        <Image\n          className=\"card-img-top card-img--height\"\n          alt=\"\"\n          path={item.backdrop_path || item.poster_path}\n        />\n        <div className=\"card-body\">\n          <Link className=\"card-title\" to={`/movie/${item.id}/details`}>\n            {item.title}\n          </Link>\n          <div className=\"card-text\">Рейтинг: {item.vote_average}</div>\n          <Favorite movieId={item.id} />\n          <WillWatch movieId={item.id} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MovieItem;\n","import React from \"react\";\nimport MovieItem from \"./MovieItem\";\nimport PropTypes from \"prop-types\";\nimport MoviesHOC from \"./MoviesHOC\";\n\nconst MoviesList = ({ movies }) => (\n  <div className=\"row\">\n    {movies.map(movie => {\n      return (\n        <div key={movie.id} className=\"col-6 mb-4\">\n          <MovieItem item={movie} />\n        </div>\n      );\n    })}\n  </div>\n);\n\nMoviesList.defaultProps = {\n  movies: []\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired\n};\n\nexport default MoviesHOC(MoviesList);\n","import React from \"react\";\nimport CallApi from \"../../api/api\";\nimport _ from \"lodash\";\n\nexport default Component =>\n  class MoviesHOC extends React.Component {\n    constructor() {\n      super();\n\n      this.state = {\n        movies: []\n      };\n    }\n\n    getMovies = (filters, page) => {\n      const { sort_by, primary_release_year, with_genres } = filters;\n      const queryStringParams = {\n        language: \"ru-RU\",\n        sort_by: sort_by,\n        page: page,\n        primary_release_year: primary_release_year,\n        with_genres: with_genres\n      };\n      CallApi.get(\"/discover/movie\", {\n        params: queryStringParams\n      }).then(data => {\n        this.props.onChangePagination(page, data.total_pages);\n        this.setState({\n          movies: data.results\n        });\n      });\n    };\n\n    componentDidMount() {\n      this.getMovies(this.props.filters, this.props.pagination.page);\n    }\n\n    componentDidUpdate(prevProps) {\n      if (!_.isEqual(this.props.filters, prevProps.filters)) {\n        this.getMovies(this.props.filters, 1);\n      }\n      if (!_.isEqual(this.props.pagination, prevProps.pagination)) {\n        this.getMovies(this.props.filters, this.props.pagination.page);\n      }\n    }\n\n    render() {\n      const { movies } = this.state;\n      return <Component movies={movies} />;\n    }\n  };\n","import React from \"react\";\nimport Filters from \"../../Filters/Filters\";\nimport MoviesList from \"../../Movies/MoviesList\";\n\nexport default class MoviesPage extends React.Component {\n  constructor() {\n    super();\n\n    this.initialState = {\n      filters: {\n        sort_by: \"vote_average.desc\",\n        primary_release_year: \"\",\n        with_genres: []\n      },\n      pagination: {\n        page: 1,\n        total_pages: 1\n      }\n    };\n    this.state = { ...this.initialState };\n  }\n\n  onChangeFilter = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState(prevState => ({\n      filters: {\n        ...prevState.filters,\n        [name]: value\n      }\n    }));\n  };\n\n  onChangePagination = (\n    page,\n    total_pages = this.state.pagination.total_pages\n  ) => {\n    this.setState(prevState => ({\n      pagination: {\n        ...prevState.pagination,\n        page,\n        total_pages\n      }\n    }));\n  };\n\n  onReset = () => {\n    this.setState({ ...this.initialState });\n  };\n\n  render() {\n    const { filters, pagination } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"row mt-4\">\n          <div className=\"col-4\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h3>Фильтры:</h3>\n                <Filters\n                  filters={filters}\n                  pagination={pagination}\n                  onChangeFilter={this.onChangeFilter}\n                  onChangePagination={this.onChangePagination}\n                  onReset={this.onReset}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"col-8\">\n            <MoviesList\n              filters={filters}\n              pagination={pagination}\n              onChangePagination={this.onChangePagination}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\n\nconst tabs = [\n  {\n    link: \"Детали\",\n    path: \"details\"\n  },\n  {\n    link: \"Видео\",\n    path: \"videos\"\n  },\n  {\n    link: \"Актеры\",\n    path: \"actors\"\n  }\n];\n\nconst NavTabs = ({ match }) => (\n  <ul className=\"nav nav-tabs\">\n    {tabs.map((item, index) => (\n      <li className=\"nav-item\" key={index}>\n        <NavLink to={`${match.url}/${item.path}`} className=\"nav-link\">\n          {item.link}\n        </NavLink>\n      </li>\n    ))}\n  </ul>\n);\nexport default withRouter(NavTabs);\n","import React from \"react\";\nimport { Table } from \"reactstrap\";\n\n// const getValues = values => {\n//   values.map(item => item.name);\n// };\nexport default class MovieDetail extends React.Component {\n  static defaultProps = {\n    movieDetails: {\n      production_countries: [],\n      production_companies: [],\n      genres: []\n    }\n  };\n\n  render() {\n    const { movieDetails } = this.props;\n    const movieDataList = [\n      {\n        name: \"Статус\",\n        value: movieDetails.status\n      },\n      {\n        name: \"Дата выхода\",\n        value: movieDetails.release_date\n      },\n      {\n        name: \"Продолжительность\",\n        value: `${movieDetails.runtime}минут`\n      },\n      {\n        name: \"Язык оригинала\",\n        value: movieDetails.original_language\n      },\n      {\n        name: \"Страна\",\n        value: movieDetails.production_countries.map(item => item.name)\n      },\n      {\n        name: \"Бюджет\",\n        value: `${movieDetails.budget}$`\n      },\n      {\n        name: \"Сборы\",\n        value: `${movieDetails.revenue}$`\n      },\n      {\n        name: \"Компания\",\n        value: movieDetails.production_companies.map(item => item.name)\n      },\n      {\n        name: \"Жанры\",\n        value: movieDetails.genres.map(item => item.name)\n      }\n    ];\n\n    //console.log(movieDetails);\n    return (\n      <Table>\n        <tbody>\n          {movieDataList.map((item, index) => {\n            return (\n              <tr key={index}>\n                <th scope=\"row\">{item.name}</th>\n                <td>{`${item.value}`}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    );\n  }\n}\n","import React from \"react\";\nimport { Spinner } from \"reactstrap\";\n\nconst Loader = () => (\n  <div className=\"row justify-content-center mt-4\">\n    <div className=\"col-3\">\n      <Spinner color=\"primary\" />\n    </div>\n  </div>\n);\n\nexport default Loader;\n","import React from \"react\";\nimport CallApi from \"../../../../api/api\";\nimport { withRouter } from \"react-router-dom\";\nimport Loader from \"../../../UIComponents/Loader\";\n\nclass MovieVideos extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      movieVideos: [],\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      match: { params }\n    } = this.props;\n    CallApi.get(`/movie/${params.id}/videos`).then(data => {\n      this.setState({\n        movieVideos: data.results,\n        isLoading: false\n      });\n    });\n  }\n\n  render() {\n    const { movieVideos, isLoading } = this.state;\n    return isLoading ? (\n      <Loader />\n    ) : (\n      <div className=\"row\">\n        {movieVideos.map(item => (\n          <div className=\"col-6\" key={item.id}>\n            <iframe\n              title=\"video\"\n              width=\"100%\"\n              height=\"260\"\n              src={`https://www.youtube.com/embed/${item.key}`}\n              frameBorder=\"0\"\n              allowFullScreen\n            ></iframe>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(MovieVideos);\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport CallApi from \"../../../../api/api\";\nimport Image from \"../../../UIComponents/Image\";\nimport Loader from \"../../../UIComponents/Loader\";\n\nclass MovieActors extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      movieActors: [],\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      match: { params }\n    } = this.props;\n    CallApi.get(`/movie/${params.id}/credits`).then(data => {\n      this.setState({\n        movieActors: data,\n        isLoading: false\n      });\n    });\n  }\n\n  render() {\n    const { movieActors, isLoading } = this.state;\n    return isLoading ? (\n      <Loader />\n    ) : (\n      movieActors.cast.map(\n        item =>\n          item.profile_path && (\n            <Image\n              key={item.id}\n              className=\"pr-1 pb-1\"\n              alt=\"\"\n              path={item.profile_path}\n              width=\"150px\"\n              height=\"200px\"\n            />\n          )\n      )\n    );\n  }\n}\nexport default withRouter(MovieActors);\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport NavTabs from \"./NavTabs\";\nimport MovieDetail from \"./MovieDetail\";\nimport MovieVideos from \"./MovieVideos\";\nimport MovieActors from \"./MovieActors\";\n\nexport default class MoviePageTabs extends React.Component {\n  render() {\n    const { movieDetails } = this.props;\n    return (\n      <div className=\"row justify-content-center mt-4\">\n        <div className=\"col-9\">\n          <NavTabs />\n          <div className=\"content\">\n            <Switch>\n              <Route path=\"/movie/:id/details\">\n                <MovieDetail movieDetails={movieDetails} />\n              </Route>\n              <Route path=\"/movie/:id/videos\" component={MovieVideos} />\n              <Route path=\"/movie/:id/actors\" component={MovieActors} />\n            </Switch>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { StarBorder } from \"@material-ui/icons\";\nimport { BookmarkBorder } from \"@material-ui/icons\";\n\nconst MovieOverview = ({ title, overview }) => (\n  <React.Fragment>\n    <h1>{title}</h1>\n    <div className=\"mb-3\">\n      <StarBorder />\n      <BookmarkBorder />\n    </div>\n    <p>{overview}</p>\n  </React.Fragment>\n);\nexport default MovieOverview;\n","import React from \"react\";\nimport CallApi from \"../../../api/api\";\nimport MoviePageTabs from \"./MoviePageTabs/MoviePageTabs\";\nimport Image from \"../../UIComponents/Image\";\nimport MovieOverview from \"./MovieOverview\";\nimport Loader from \"../../UIComponents/Loader\";\n\nexport default class MoviePage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      movieDetails: [],\n      isLoading: true\n    };\n  }\n  componentDidMount() {\n    const {\n      match: { params }\n    } = this.props;\n    CallApi.get(`/movie/${params.id}`, {\n      params: {\n        language: \"ru-RU\"\n      }\n    }).then(data => {\n      this.setState({\n        movieDetails: data,\n        isLoading: false\n      });\n    });\n  }\n\n  render() {\n    const { movieDetails, isLoading } = this.state;\n    return (\n      <div className=\"container\">\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <React.Fragment>\n            <div className=\"row justify-content-center mt-4\">\n              <div className=\"col-3\">\n                <Image path={movieDetails.poster_path} width=\"100%\" alt=\"\" />\n              </div>\n              <div className=\"col-6\">\n                <MovieOverview\n                  title={movieDetails.title}\n                  overview={movieDetails.overview}\n                />\n              </div>\n            </div>\n            <MoviePageTabs movieDetails={movieDetails} />\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Header from \"./Header/Header\";\nimport CallApi from \"../api/api\";\nimport MoviesPage from \"./pages/MoviesPage/MoviesPage\";\nimport MoviePage from \"./pages/MoviePage/MoviePage\";\nimport Cookies from \"universal-cookie\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nconst cookies = new Cookies();\n\nexport const UserContext = React.createContext();\nexport const AuthContext = React.createContext();\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n\n    this.initialState = {\n      user: null,\n      session_id: null,\n      showLoginModal: false,\n      favorite_movies: [],\n      watchlist: []\n    };\n    this.state = { ...this.initialState };\n  }\n\n  updateUser = user => {\n    this.setState({\n      user\n    });\n  };\n\n  updateSessionId = session_id => {\n    cookies.set(\"session_id\", session_id, {\n      path: \"/\",\n      maxAge: 2592000\n    });\n    this.setState({\n      session_id\n    });\n  };\n\n  toggleLoginModal = () => {\n    this.setState(prevState => ({\n      showLoginModal: !prevState.showLoginModal\n    }));\n  };\n\n  handleLogOut = () => {\n    const { session_id } = this.state;\n    CallApi.delete(\"/authentication/session\", {\n      body: {\n        session_id\n      }\n    }).then(() => {\n      this.onLogOut();\n    });\n  };\n\n  onLogOut = () => {\n    cookies.remove(\"session_id\");\n    this.setState({ ...this.initialState });\n  };\n\n  getFavoriteList = () => {\n    const { session_id } = this.state;\n    return CallApi.get(`/account/${this.state.user.id}/favorite/movies`, {\n      params: {\n        session_id\n      }\n    }).then(data => {\n      this.setState({\n        favorite_movies: data.results\n      });\n    });\n  };\n\n  getWatchList = () => {\n    const { session_id } = this.state;\n    return CallApi.get(`/account/${this.state.user.id}/watchlist/movies`, {\n      params: {\n        session_id\n      }\n    }).then(data => {\n      this.setState({\n        watchlist: data.results\n      });\n    });\n  };\n\n  getUser = session_id => {\n    return CallApi.get(\"/account\", {\n      params: {\n        session_id\n      }\n    });\n  };\n\n  componentDidMount() {\n    const session_id = cookies.get(\"session_id\");\n    if (session_id) {\n      this.getUser(session_id).then(user => {\n        this.updateUser(user);\n        this.updateSessionId(session_id);\n        this.getFavoriteList();\n        this.getWatchList();\n      });\n    }\n  }\n\n  render() {\n    const {\n      user,\n      session_id,\n      watchlist,\n      showLoginModal,\n      favorite_movies\n    } = this.state;\n    return (\n      <BrowserRouter>\n        <UserContext.Provider\n          value={{\n            user,\n            updateUser: this.updateUser,\n            getUser: this.getUser,\n            favorite_movies,\n            getFavoriteList: this.getFavoriteList,\n            watchlist,\n            getWatchList: this.getWatchList\n          }}\n        >\n          <AuthContext.Provider\n            value={{\n              session_id,\n              updateSessionId: this.updateSessionId,\n              handleLogOut: this.handleLogOut,\n              showLoginModal,\n              toggleLoginModal: this.toggleLoginModal\n            }}\n          >\n            <div>\n              <Header />\n              <Route exact path=\"/\" component={MoviesPage} />\n              <Route path=\"/movie/:id\" component={MoviePage} />\n            </div>\n          </AuthContext.Provider>\n        </UserContext.Provider>\n      </BrowserRouter>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./stylesheets/index.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}